package com.honhai.foxconn.fxccalendar.elsemember;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.graphics.drawable.Drawable;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.PopupWindow;
import android.widget.RelativeLayout;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.Toast;

import com.honhai.foxconn.fxccalendar.R;
import com.honhai.foxconn.fxccalendar.colormanager.ColorManagerActivity;
import com.honhai.foxconn.fxccalendar.data.Data;
import com.honhai.foxconn.fxccalendar.elsemember.PopupWindow.ColorPicker;
import com.honhai.foxconn.fxccalendar.elsemember.PopupWindow.ColorPickerPopupWindow;

import static com.honhai.foxconn.fxccalendar.main.MainActivity.SP_THEME;
import static com.honhai.foxconn.fxccalendar.main.MainActivity.SP_THEME_COLOR;

public class SettingsActivity extends AppCompatActivity {

    private TextView tv_alarm_setting;
    private TextView tv_settings_title;
    private TextView tv_color_theme;
    private TextView tv_label_manager;
    private ImageButton ib_left_return;
    private ImageButton ib_right_save;
    private ImageView iv_modify;
    private ImageView iv_edit;
    private ImageView iv_note;
    private ImageView iv_color_theme;
    private ImageView iv_label_manage;
    private RelativeLayout rl_event_label;
    private RelativeLayout rl_alarm_color;
    private RelativeLayout rl_alarm_vibrate;
    private SharedPreferences sharedPreferences;
    private ColorPickerPopupWindow mPopWindow;
    private Switch sw_vibrate;
    private SharedPreferences colorSharedPreference;
    private ColorPicker colorPicker;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_settings);

        findViews();
        setViewsColor();
        rl_alarm_vibrate = findViewById(R.id.layout_alarm_vibrate);
        rl_alarm_color = findViewById(R.id.layout_alarm_color);


        rl_alarm_color.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {

                showPopupWindow();
                // Toast.makeText(getApplicationContext(),"显示色彩主题页面",Toast.LENGTH_LONG).show();
            }
        });

        // rl_alarm_vibrate.setOnClickListener((OnClickListener) this);
        rl_event_label.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent();
                intent.setClass(SettingsActivity.this, ColorManagerActivity.class);
                startActivity(intent);
            }
        });
        //rl_alarm_color.setOnClickListener((OnClickListener) this);

        ib_left_return.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(getApplicationContext(), "返回,不保存设定", Toast.LENGTH_LONG).show();
            }
        });
        ib_right_save.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(getApplicationContext(), "保存设定", Toast.LENGTH_LONG).show();
            }
        });
    }

    private void findViews() {

        tv_alarm_setting = findViewById(R.id.alarm_setting);
        tv_settings_title = findViewById(R.id.settings_title);
        tv_color_theme = findViewById(R.id.tv_color);
        tv_label_manager = findViewById(R.id.tv_label_manager);

        ib_left_return = findViewById(R.id.left_return);
        ib_right_save = findViewById(R.id.right_save);

        iv_modify = findViewById(R.id.iv_modify);
        iv_edit = findViewById(R.id.iv_edit);
        iv_note = findViewById(R.id.iv_note);
        iv_color_theme = findViewById(R.id.iv_color_theme);
        iv_label_manage = findViewById(R.id.iv_label_manage);

        rl_event_label = findViewById(R.id.layout_event_label);

        sw_vibrate = findViewById(R.id.sw_vibrate);
    }

    private void setViewsColor() {
        tv_alarm_setting.setTextColor(Data.getInstance().getThemeColor());
        tv_settings_title.setTextColor(Data.getInstance().getThemeColor());
        tv_color_theme.setTextColor(Data.getInstance().getThemeColor());
        tv_label_manager.setTextColor(Data.getInstance().getThemeColor());

        Drawable drawable_left_return = ib_left_return.getDrawable();
        drawable_left_return.setTint(Data.getInstance().getThemeColor());
        ib_left_return.setImageDrawable(drawable_left_return);

        Drawable drawable_right_save = ib_right_save.getDrawable();
        drawable_right_save.setTint(Data.getInstance().getThemeColor());
        ib_right_save.setImageDrawable(drawable_right_save);

        Drawable drawable_modify_edit = getDrawable(R.drawable.ic_keyboard_arrow_right_black_24dp);
        iv_modify.setImageDrawable(drawable_modify_edit);
        iv_edit.setImageDrawable(drawable_modify_edit);
        drawable_modify_edit.setTint(Data.getInstance().getThemeColor());


        Drawable drawable_iv_label_manage = iv_label_manage.getBackground();
        drawable_iv_label_manage.setTint(Data.getInstance().getThemeColor());



        Drawable drawable_iv_color_theme = iv_color_theme.getBackground();
        drawable_iv_color_theme.setTint(Data.getInstance().getThemeColor());

        Drawable drawable_iv_note = iv_note.getBackground();
        drawable_iv_note.setTint(Data.getInstance().getThemeColor());


        sw_vibrate.getThumbDrawable().setTint(Data.getInstance().getThemeColor());


    }

    private void showPopupWindow() {

        mPopWindow = new ColorPickerPopupWindow(SettingsActivity.this);
        mPopWindow.setOnConfirmListener(new ColorPickerPopupWindow.OnConfirmListener() {
            @Override
            public void onConfirm() {
                colorSharedPreference = getSharedPreferences(SP_THEME, Context.MODE_PRIVATE);
                SharedPreferences.Editor colorEdit = colorSharedPreference.edit();
                colorEdit.putInt(SP_THEME_COLOR, mPopWindow.colorPicker.getColor());
                //colorEdit.putInt(SP_THEME_COLOR, ColorPickerPopupWindow.colorPicker.getColor());
                colorEdit.commit();
                Data.getInstance().setThemeColor(colorSharedPreference.getInt(SP_THEME_COLOR, Color.BLUE));
                setViewsColor();
            }

        });



    }
}
