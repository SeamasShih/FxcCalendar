package com.honhai.foxconn.fxccalendar.elsemember.photo;

import android.content.Intent;
import android.content.SharedPreferences;
import android.database.Cursor;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.provider.MediaStore;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.GridLayoutManager;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.OrientationHelper;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.MenuItem;
import android.view.View;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.honhai.foxconn.fxccalendar.R;
import com.honhai.foxconn.fxccalendar.data.Data;

import java.util.ArrayList;

public class PhotoSelectActivity extends AppCompatActivity {
    
    private Toolbar toolbar;
    private TextView title;
    private RecyclerView recyclerView;
    private PhotoAdapter adapter;
    private String groupObjectId;

    public static String INTENT_GROUP_OBJECT_ID = "groupObjectId";

    public final String SHARED_PREFERENCE_NAME = "mSharePreference";
    public final String SHARED_PREFERENCE_SPAN_COUNT = "mSpanCount";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_photo_select);

        Intent intent = getIntent();
        groupObjectId = intent.getStringExtra(INTENT_GROUP_OBJECT_ID);

        findViews();
        setToolbar();
        setAdapter();
        setRecyclerView();
    }

    private void setToolbar() {
        toolbar.inflateMenu(R.menu.menu_toolbar);
        toolbar.getNavigationIcon().setAlpha(255);
        toolbar.getMenu().getItem(0).getIcon().setAlpha(255);
        toolbar.setOnMenuItemClickListener(new Toolbar.OnMenuItemClickListener() {
            @Override
            public boolean onMenuItemClick(MenuItem menuItem) {
                if (adapter.getChosenString() == null)
                    Toast.makeText(PhotoSelectActivity.this,getString(R.string.neverSelectPhoto),Toast.LENGTH_SHORT).show();
                else {
                    //todo Joy update photo
                }
                return true;
            }
        });
        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
    }

    @Override
    protected void onResume() {
        super.onResume();
        setToolbarColor();
    }

    private void setToolbarColor() {
        title.setTextColor(Data.getInstance().getThemeColor());

        toolbar.getMenu().getItem(0).getIcon().setTint(Data.getInstance().getThemeColor());
        toolbar.getNavigationIcon().setTint(Data.getInstance().getThemeColor());
    }

    private void setAdapter() {
        ArrayList<String> strings = getData();
        adapter = new PhotoAdapter(this,recyclerView, strings);
    }

    private ArrayList<String> getData(){
        ArrayList<String> data = new ArrayList<>();

        Uri uri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;
        String[] projections = {
                MediaStore.Images.Media.DATA,
        };
        String order = MediaStore.Images.Media.DATE_MODIFIED + " DESC";

        try {
            Cursor imageCursor = getContentResolver().query(
                    uri,
                    projections,
                    null,
                    null,
                    order
            );
            if (imageCursor != null) {
                while (imageCursor.moveToNext()) {
                    data.add(imageCursor.getString(0));
                }
                imageCursor.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        return data;
    }

    private void setRecyclerView() {
        SharedPreferences sharedPreferences = getSharedPreferences(SHARED_PREFERENCE_NAME,MODE_PRIVATE);
        final int mSpanCount = sharedPreferences.getInt(SHARED_PREFERENCE_SPAN_COUNT,3);

        recyclerView.setLayoutManager(new GridLayoutManager(this,mSpanCount, OrientationHelper.VERTICAL,false));
        recyclerView.setAdapter(adapter);
        recyclerView.addItemDecoration(new PhotoDecoration(this,LinearLayout.VERTICAL));
        recyclerView.addItemDecoration(new PhotoDecoration(this,LinearLayout.HORIZONTAL));
    }

    private void findViews() {
        toolbar = findViewById(R.id.topBar);
        title = findViewById(R.id.toolbarTitle);
        recyclerView = findViewById(R.id.recycler);
    }
}
