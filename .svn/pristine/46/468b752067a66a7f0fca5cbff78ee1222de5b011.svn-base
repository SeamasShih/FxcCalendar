package com.honhai.foxconn.fxccalendar.data;

import com.avos.avoscloud.AVException;
import com.avos.avoscloud.AVObject;
import com.avos.avoscloud.AVQuery;
import com.avos.avoscloud.DeleteCallback;
import com.avos.avoscloud.FindCallback;
import com.avos.avoscloud.SaveCallback;

import java.util.ArrayList;
import java.util.List;

public class User {
    private String workId;
    private String password;
    private String name;
    private String englishName;
    private String objectId;
    private ArrayList<User> users = new ArrayList<>();

    public User(String workId, String password, String name, String englishName, String objectId) {
        this.workId = workId;
        this.password = password;
        this.name = name;
        this.englishName = englishName;
        this.objectId = objectId;
    }

    public User() {

    }

    public String getWorkId() {
        return workId;
    }

    public void setWorkId(String workId) {
        this.workId = workId;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getObjectId() {
        return objectId;
    }

    public void setObjectId(String objectId) {
        this.objectId = objectId;
    }

    public String getEnglishName() {
        return englishName;
    }

    public void setEnglishName(String englishName) {
        this.englishName = englishName;
    }

    public void addUser(String workId, String password, String name, String englishName) {
        AVObject userInfo = new AVObject("UserInfo");
        userInfo.put("workId", workId);
        userInfo.put("password", password);
        userInfo.put("name", name);
        userInfo.put("englishName", englishName);
        userInfo.saveInBackground(new SaveCallback() {
            @Override
            public void done(AVException e) {
                if (e != null) {
                    e.printStackTrace();
                }
            }
        });

    }

    public void updateUser(String workId, String password, String name, String englishName, String objectId) {
        AVObject userInfo = AVObject.createWithoutData("UserInfo", objectId);
        userInfo.put("workId", workId);
        userInfo.put("password", password);
        userInfo.put("name", name);
        userInfo.put("englishName", englishName);
        userInfo.saveInBackground(new SaveCallback() {
            @Override
            public void done(AVException e) {
                if (e != null) {
                    e.printStackTrace();
                }
            }
        });
    }

    public ArrayList<User> getUsers() {
        final ArrayList<AVObject> avList = new ArrayList<>();
        avList.clear();
        AVQuery<AVObject> avQuery = new AVQuery<>("UserInfo");
        avQuery.findInBackground(new FindCallback<AVObject>() {
            @Override
            public void done(List<AVObject> aList, AVException e) {
                if (e == null) {
                    avList.addAll(aList);
                } else {
                    e.printStackTrace();
                }
            }
        });
        for (AVObject object : avList) {
            users.clear();
            User user = new User();
            user.setWorkId(object.get("workId").toString());
            user.setPassword(object.get("password").toString());
            user.setName(object.get("name").toString());
            user.setEnglishName(object.get("englishName").toString());
            user.setObjectId(object.getObjectId());
            users.add(user);
        }
        return users;
    }

    public void deleteUser(String objectId) {
        AVObject userInfo = AVObject.createWithoutData("UserInfo", objectId);
        userInfo.deleteInBackground(new DeleteCallback() {
            public void done(AVException e) {
                if (e != null) {
                    e.printStackTrace();
                }
            }
        });
    }

}
