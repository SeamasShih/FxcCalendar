package com.honhai.foxconn.fxccalendar.addevent;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.content.Context;
import android.content.res.ColorStateList;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.provider.ContactsContract;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.ActionMode;
import android.view.Gravity;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageSwitcher;
import android.widget.ImageView;
import android.widget.PopupWindow;
import android.widget.TextView;

import com.avos.avoscloud.feedback.Resources;
import com.honhai.foxconn.fxccalendar.R;
import com.honhai.foxconn.fxccalendar.colormanager.ColorManagerActivity;
import com.honhai.foxconn.fxccalendar.data.Data;
import com.honhai.foxconn.fxccalendar.main.CalendarPopupWindow;
import static com.honhai.foxconn.fxccalendar.data.Data.getInstance;

public class AddEventActivity extends AppCompatActivity {
    TextView alarm_color;
    private Intent intent;
    private EditText alarm_title;
    private ImageButton left_clear,tv_save;
    private ImageView iv_time,iv_all_day,iv_color,iv_point,iv_remind;
    int[] colors;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_add_event);
        Drawable drawable = getDrawable(R.drawable.ic_arrow_back_black_24dp);
        drawable.setAlpha(255);
        drawable.setTintList(ColorStateList.valueOf(Data.getInstance().getThemeColor()));
        ImageButton imageButton = findViewById(R.id.left_clear);
        imageButton.setImageDrawable(drawable);

        drawable = getDrawable(R.drawable.ic_check_black_24dp);
        drawable.setAlpha(255);
        drawable.setTintList(ColorStateList.valueOf(Data.getInstance().getThemeColor()));
        imageButton = findViewById(R.id.tv_save);
        imageButton.setImageDrawable(drawable);

        Drawable drawable1 = getDrawable(R.drawable.ic_keyboard_arrow_right_black_24dp);
        ImageView imageView = findViewById(R.id.iv_time);
        ImageView imageView1 = findViewById(R.id.iv_point);
        imageView.setImageDrawable(drawable1);
        imageView1.setImageDrawable(drawable1);
        drawable1.setTint(Data.getInstance().getThemeColor());

        EditText editText = findViewById(R.id.alarm_title);
        editText.setHintTextColor(Data.getInstance().getThemeColor());

        Drawable drawable2 = getDrawable(R.drawable.ic_alarm_on_black_24dp);
        ImageView remind = findViewById(R.id.iv_remind);
        ImageView allday = findViewById(R.id.iv_all_day);
        remind.setImageDrawable(drawable2);
        allday.setImageDrawable(drawable2);
        drawable2.setTint(Data.getInstance().getThemeColor());

        ImageView defaultcolor = findViewById(R.id.iv_color);
        Drawable drawable4 = defaultcolor.getBackground();
        drawable4.setTint(Data.getInstance().getThemeColor());



    }

    public void colorchange(int color)
    {
        Drawable drawable = getDrawable(R.drawable.ic_arrow_back_black_24dp);
        drawable.setAlpha(255);
        drawable.setTintList(ColorStateList.valueOf(color));
        left_clear = findViewById(R.id.left_clear);
        left_clear.setImageDrawable(drawable);

        drawable = getDrawable(R.drawable.ic_check_black_24dp);
        drawable.setAlpha(255);
        drawable.setTintList(ColorStateList.valueOf(color));
        tv_save = findViewById(R.id.tv_save);
        tv_save.setImageDrawable(drawable);

        Drawable drawable1 = getDrawable(R.drawable.ic_keyboard_arrow_right_black_24dp);
        ImageView imageView = findViewById(R.id.iv_time);
        ImageView imageView1 = findViewById(R.id.iv_point);
        imageView.setImageDrawable(drawable1);
        imageView1.setImageDrawable(drawable1);
        drawable1.setTint(color);

        EditText editText = findViewById(R.id.alarm_title);
        editText.setHintTextColor(ColorStateList.valueOf(color));

        Drawable drawable2 = getDrawable(R.drawable.ic_alarm_on_black_24dp);
        ImageView remind = findViewById(R.id.iv_remind);
        ImageView allday = findViewById(R.id.iv_all_day);
        remind.setImageDrawable(drawable2);
        allday.setImageDrawable(drawable2);
        drawable2.setTint(color);

        ImageView defaultcolor = findViewById(R.id.iv_color);
        Drawable drawable4 = defaultcolor.getBackground();
        drawable4.setTint(color);

    }
    public void onClick(View v) {
        View popupLayout = getLayoutInflater().inflate(R.layout.add_event_color_popup_window, (ViewGroup) findViewById(R.id.add_event_color_window_layout));
        final ColorPopupWindow popupWindow = new ColorPopupWindow(this,popupLayout, getWindow().getDecorView().getWidth() - 100, getWindow().getDecorView().getHeight() * 3 / 5);
        popupWindow.setBackgroundDrawable(new ColorDrawable(getResources().getColor(R.color.colorDefaultBackground)));
        popupWindow.setOutsideTouchable(true);
        popupWindow.setFocusable(true);
        TextView manage = popupLayout.findViewById(R.id.addEventColorPopupWindowManage);
        manage.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent();
                intent.setClass(AddEventActivity.this, ColorManagerActivity.class);
                startActivity(intent);
            }
        });
        TextView confirm = popupLayout.findViewById(R.id.addEventColorPopupWindowConfirm);
        confirm.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //todo Spring change layout color

                popupWindow.dismiss();
            }
        });
        popupWindow.showAtLocation(getWindow().getDecorView(), Gravity.CENTER, 0, 0);
        WindowManager.LayoutParams lp = getWindow().getAttributes();
        lp.alpha = .5f;
        getWindow().setAttributes(lp);
        popupWindow.setOnDismissListener(new PopupWindow.OnDismissListener() {
            @Override
            public void onDismiss() {
                WindowManager.LayoutParams lp = getWindow().getAttributes();
                lp.alpha = 1f;
                getWindow().setAttributes(lp);
            }
        });
    }
}

