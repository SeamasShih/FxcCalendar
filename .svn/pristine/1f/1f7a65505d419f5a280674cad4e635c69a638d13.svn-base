package com.honhai.foxconn.fxccalendar.eventpreview.RecyclerView;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.honhai.foxconn.fxccalendar.R;
import com.honhai.foxconn.fxccalendar.addevent.AddEventActivity;
import com.honhai.foxconn.fxccalendar.colormanager.ColorImageView;
import com.honhai.foxconn.fxccalendar.data.Event;

import java.util.List;

import static com.honhai.foxconn.fxccalendar.main.MainActivity.INTENT_EVENT;


public class GroupTestAdapter extends RecyclerView.Adapter<GroupTestAdapter.ViewHolder> {

    private Context context;
    private List<Event> list;
    private OnItemClickListener mOnItemClickListener;

    class ViewHolder extends RecyclerView.ViewHolder {
        // TODO: 声明组件
        TextView textView;
        TextView textView_up;
        TextView textView_down;
        TextView data;
        RelativeLayout RL ;
        ColorImageView colorImageView;

        public ViewHolder(View view) {
            super(view);
            // TODO: 注册组件
            textView = (TextView) view.findViewById(R.id.text_data);
            textView_up = (TextView)view.findViewById(R.id.textView5);
            textView_down = (TextView)view.findViewById(R.id.textView6);
            data = (TextView)view.findViewById(R.id.textView4);
            RL = view.findViewById(R.id.day_event);
            colorImageView  = view.findViewById(R.id.imageView5);
        }

    }

    public GroupTestAdapter(Context context, List<Event> list) {
        this.context = context;
        this.list = list;
    }

    public interface OnItemClickListener {
        void onItemClick(View view, int position);

        void onItemLongClick(View view, int position);
    }

    public void setOnItemClickListener(OnItemClickListener mOnItemClickListener) {
        this.mOnItemClickListener = mOnItemClickListener;
    }

    @Override
    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        // TODO: 为对应itemViewId赋值
        int itemViewId = R.layout.item_test;
        ViewHolder holder = new ViewHolder(LayoutInflater.from(context).inflate(itemViewId, parent, false));
        return holder;
    }

    @Override
    public void onBindViewHolder(final ViewHolder holder, int position) {
        // TODO: 绑定组件的事件
        String starthour,startminute,endhour,endminute;
        Event myevent = list.get(position);
//        holder.textView.setText(list.get(position));
            endhour = myevent.getEndHour()<10 ? ("0"+myevent.getEndHour()) : ""+myevent.getEndHour();
        endminute = myevent.getEndMinute()<10 ? ("0"+myevent.getEndMinute()) : ""+myevent.getEndMinute();
        starthour = myevent.getStartHour()<10 ? ("0"+myevent.getStartHour()) : ""+myevent.getStartHour();
        startminute = myevent.getStartMinute()<10 ? ("0"+myevent.getStartMinute()) : ""+myevent.getStartMinute();

        holder.textView_down.setText(endhour+":"+endminute);
        holder.textView_up.setText(starthour+":"+startminute);
        holder.data.setText(myevent.getTitle()+"");
        holder.colorImageView.setColor(myevent.getColor());

        if(myevent.isAllDay() && (myevent.getStartHour()== 0) && (myevent.getStartMinute()== 0)&& (myevent.getEndHour()== 0)&& (myevent.getEndHour()== 0)){
            holder.textView_up.setText("");
            holder.textView_down.setText("");
            holder.textView.setText("全天");
            holder.textView.setVisibility(View.VISIBLE);
        }

        if((myevent.getStartHour()!= 0) || (myevent.getStartMinute()!= 0) || (myevent.getEndHour() != 0) || (myevent.getEndHour() != 0)){
            holder.textView.setVisibility(View.GONE);
        }

        final int p = position;
        holder.RL.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent();
                Bundle bundle = new Bundle();
                bundle.putParcelable(INTENT_EVENT, list.get(p));
                intent.putExtras(bundle);
                intent.setClass(context, AddEventActivity.class);
                context.startActivity(intent);
            }
        });

        // 如果设置了回调，则设置点击事件
        if (mOnItemClickListener != null) {
            holder.itemView.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    int pos = holder.getLayoutPosition();
                    mOnItemClickListener.onItemClick(holder.itemView, pos);
                }
            });

            holder.itemView.setOnLongClickListener(new View.OnLongClickListener() {
                @Override
                public boolean onLongClick(View v) {
                    int pos = holder.getLayoutPosition();
                    mOnItemClickListener.onItemLongClick(holder.itemView, pos);
                    return true;
                }
            });
        }
    }


    @Override
    public int getItemCount() {
        return list.size();
    }




}