package com.honhai.foxconn.fxccalendar.addevent;

import android.content.Intent;
import android.graphics.drawable.ColorDrawable;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.PopupWindow;
import android.widget.TextView;

import com.honhai.foxconn.fxccalendar.R;
import com.honhai.foxconn.fxccalendar.colormanager.ColorManagerActivity;
import com.honhai.foxconn.fxccalendar.main.CalendarPopupWindow;

public class AddEventActivity extends AppCompatActivity {
    TextView alarm_color;
    private Intent intent;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_add_event);
    }

    public void onClick(View v) {
//        Intent intent = new Intent(this, com.honhai.foxconn.fxccalendar.colorunits.ColorUtils.class);
//        startActivity(intent);
//        finish();
        View popupLayout = getLayoutInflater().inflate(R.layout.add_event_color_popup_window, (ViewGroup) findViewById(R.id.add_event_color_window_layout));
        final ColorPopupWindow popupWindow = new ColorPopupWindow(popupLayout, getWindow().getDecorView().getWidth() - 100, getWindow().getDecorView().getHeight() * 3 / 5);
        popupWindow.setBackgroundDrawable(new ColorDrawable(getResources().getColor(R.color.colorDefaultBackground)));
        popupWindow.setOutsideTouchable(true);
        popupWindow.setFocusable(true);
        TextView manage = popupLayout.findViewById(R.id.addEventColorPopupWindowManage);
        manage.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent();
                intent.setClass(AddEventActivity.this, ColorManagerActivity.class);
                startActivity(intent);
            }
        });
        TextView confirm = popupLayout.findViewById(R.id.addEventColorPopupWindowConfirm);
        confirm.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //todo Spring change layout color
                popupWindow.dismiss();
            }
        });
        popupWindow.showAtLocation(getWindow().getDecorView(), Gravity.CENTER, 0, 0);
        WindowManager.LayoutParams lp = getWindow().getAttributes();
        lp.alpha = .5f;
        getWindow().setAttributes(lp);
        popupWindow.setOnDismissListener(new PopupWindow.OnDismissListener() {
            @Override
            public void onDismiss() {
                WindowManager.LayoutParams lp = getWindow().getAttributes();
                lp.alpha = 1f;
                getWindow().setAttributes(lp);
            }
        });
    }
}

